local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local VoiceChatService = game:GetService("VoiceChatService")

local LocalPlayer = Players.LocalPlayer

local Window = Fluent:CreateWindow({
	Title = "Voice Ban Bypasser",
	SubTitle = "",
	TabWidth = 160,
	Size = UDim2.fromOffset(580, 460),
	Acrylic = true,
	Theme = "Dark",
	MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
	Player   = Window:AddTab({ Title = "Player",   Icon = "user" }),
	Chams    = Window:AddTab({ Title = "Chams",    Icon = "eye" }),
	Voice    = Window:AddTab({ Title = "Voice",    Icon = "mic" }),
	Teleport = Window:AddTab({ Title = "Teleport", Icon = "map" }),
	Info     = Window:AddTab({ Title = "Info",     Icon = "heart" }),
	Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local currentSpeed = 16
local flySpeed = 50
local freecamSpeed = 50

local flyBodyVelocity, flyBodyGyro, flyConnection
local freecamEnabled = false
local freecamConnection
local oldCameraType, oldCamSubject, oldCFrame
local freecamCFrame

local function setWalkSpeed(speed)
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("Humanoid") then
		char.Humanoid.WalkSpeed = speed
	end
end

local function enableFly()
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		local root = char.HumanoidRootPart
		flyBodyVelocity = Instance.new("BodyVelocity", root)
		flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
		flyBodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
		flyBodyGyro = Instance.new("BodyGyro", root)
		flyBodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
		flyBodyGyro.CFrame = root.CFrame
		flyConnection = RunService.RenderStepped:Connect(function()
			local dir = Vector3.new(0, 0, 0)
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then
				dir = dir + Workspace.CurrentCamera.CFrame.LookVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.S) then
				dir = dir - Workspace.CurrentCamera.CFrame.LookVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.A) then
				dir = dir - Workspace.CurrentCamera.CFrame.RightVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.D) then
				dir = dir + Workspace.CurrentCamera.CFrame.RightVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
				dir = dir + Vector3.new(0,1,0)
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
				dir = dir - Vector3.new(0,1,0)
			end
			if dir.Magnitude > 0 then
				flyBodyVelocity.Velocity = dir.Unit * flySpeed
			else
				flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
			end
			flyBodyGyro.CFrame = Workspace.CurrentCamera.CFrame
		end)
	end
end

local function disableFly()
	if flyBodyVelocity then flyBodyVelocity:Destroy() flyBodyVelocity = nil end
	if flyBodyGyro then flyBodyGyro:Destroy() flyBodyGyro = nil end
	if flyConnection then flyConnection:Disconnect() flyConnection = nil end
end

local function hideCharacter()
	local char = LocalPlayer.Character
	if not char then return end
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.LocalTransparencyModifier = 1
			part.CanCollide = false
		elseif part:IsA("Decal") or part:IsA("Texture") then
			part.Transparency = 1
		end
	end
end

local function showCharacter()
	local char = LocalPlayer.Character
	if not char then return end
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.LocalTransparencyModifier = 0
			part.CanCollide = true
		elseif part:IsA("Decal") or part:IsA("Texture") then
			part.Transparency = 0
		end
	end
end

local function enableFreecam()
	if freecamEnabled then return end
	freecamEnabled = true
	local cam = Workspace.CurrentCamera
	oldCameraType = cam.CameraType
	oldCamSubject = cam.CameraSubject
	oldCFrame = cam.CFrame
	freecamCFrame = cam.CFrame
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.Anchored = true
	end
	hideCharacter()
	cam.CameraType = Enum.CameraType.Scriptable
	UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
	UserInputService.MouseIconEnabled = false
	freecamConnection = RunService.RenderStepped:Connect(function(dt)
		local moveVec = Vector3.new(
			(UserInputService:IsKeyDown(Enum.KeyCode.D) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.A) and 1 or 0),
			(UserInputService:IsKeyDown(Enum.KeyCode.Space) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) and 1 or 0),
			(UserInputService:IsKeyDown(Enum.KeyCode.S) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.W) and 1 or 0)
		)
		if moveVec.Magnitude > 0 then
			moveVec = moveVec.Unit * freecamSpeed * dt
			freecamCFrame = freecamCFrame * CFrame.new(moveVec)
		end
		local delta = UserInputService:GetMouseDelta()
		if delta.Magnitude ~= 0 then
			local sensitivity = 0.3
			freecamCFrame = freecamCFrame * CFrame.Angles(
				-math.rad(delta.Y * sensitivity),
				-math.rad(delta.X * sensitivity),
				0
			)
		end
		cam.CFrame = freecamCFrame
	end)
end

local function disableFreecam()
	if not freecamEnabled then return end
	freecamEnabled = false
	if freecamConnection then
		freecamConnection:Disconnect()
		freecamConnection = nil
	end
	local cam = Workspace.CurrentCamera
	cam.CameraType = oldCameraType or Enum.CameraType.Custom
	cam.CameraSubject = oldCamSubject or LocalPlayer.Character
	cam.CFrame = oldCFrame or cam.CFrame
	UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	UserInputService.MouseIconEnabled = true
	showCharacter()
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.Anchored = false
	end
end

local PlayerSection = Tabs.Player:AddSection("Speed, Fly")
PlayerSection:AddSlider("SpeedSlider", { Title = "Walk Speed", Default = 16, Min = 0, Max = 100, Rounding = 0 }):OnChanged(function(value)
	currentSpeed = value
	setWalkSpeed(currentSpeed)
end)
PlayerSection:AddToggle("FlyToggle", { Title = "Fly", Default = false }):OnChanged(function(state)
	if state then
		enableFly()
	else
		disableFly()
	end
end)
PlayerSection:AddSlider("FlySpeedSlider", { Title = "Fly Speed", Default = 50, Min = 0, Max = 300, Rounding = 0 }):OnChanged(function(value)
	flySpeed = value
end)

local FreecamSection = Tabs.Player:AddSection("Freecam")
FreecamSection:AddToggle("FreecamToggle", { Title = "Freecam", Default = false }):OnChanged(function(state)
	if state then
		enableFreecam()
	else
		disableFreecam()
	end
end)
FreecamSection:AddSlider("FreecamSpeedSlider", { Title = "Freecam Speed", Default = 50, Min = 0, Max = 300, Rounding = 0 }):OnChanged(function(value)
	freecamSpeed = value
end)

local chamsActive = false
local chamsColor = Color3.fromRGB(255, 255, 255)

local function RemoveChams()
	for _, p in pairs(Players:GetPlayers()) do
		if p.Character then
			for _, part in pairs(p.Character:GetDescendants()) do
				if part:IsA("BasePart") and part:FindFirstChild("ESPBox") then
					part.ESPBox:Destroy()
				end
			end
		end
	end
end

local function UpdateChams()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character then
			for _, part in pairs(p.Character:GetDescendants()) do
				if part:IsA("BasePart") then
					local box = part:FindFirstChild("ESPBox")
					if not box then
						box = Instance.new("BoxHandleAdornment")
						box.Name = "ESPBox"
						box.Adornee = part
						box.AlwaysOnTop = true
						box.ZIndex = 10
						box.Size = part.Size + Vector3.new(0.1, 0.1, 0.1)
						box.Transparency = 0.5
						box.Color3 = chamsColor
						box.Parent = part
					else
						box.Color3 = chamsColor
					end
				end
			end
		end
	end
end

local chamsTask
local function chamsLoop()
	while chamsActive do
		UpdateChams()
		task.wait(2)
	end
end

local chamsSection = Tabs.Chams:AddSection("chams")
chamsSection:AddToggle("ChamsToggle", { Title = "chams", Default = false }):OnChanged(function(state)
	chamsActive = state
	if state then
		chamsTask = task.spawn(chamsLoop)
	else
		if chamsTask then task.cancel(chamsTask) end
		chamsTask = nil
		RemoveChams()
	end
end)
chamsSection:AddColorpicker("ChamsColor", { Title = "chams color", Default = chamsColor }):OnChanged(function(c)
	chamsColor = c
end)

local NametagsActive = false
local nametagTask
local function CreateNametag(p)
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "Nametag"
	billboard.Size = UDim2.new(0, 50, 0, 50)
	billboard.StudsOffset = Vector3.new(0, 2, 0)
	billboard.AlwaysOnTop = true
	local frame = Instance.new("Frame", billboard)
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = p.Name
	label.TextScaled = false
	label.TextSize = 14
	label.Font = Enum.Font.GothamBold
	label.TextColor3 = chamsColor
	label.TextStrokeTransparency = 0.3
	return billboard
end

local function RemoveNametags()
	for _, p in pairs(Players:GetPlayers()) do
		if p.Character and p.Character:FindFirstChild("Head") then
			local tag = p.Character.Head:FindFirstChild("Nametag")
			if tag then tag:Destroy() end
		end
	end
end

local function UpdateNametags()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Head") then
			local head = p.Character.Head
			local existing = head:FindFirstChild("Nametag")
			if not existing then
				local tag = CreateNametag(p)
				tag.Parent = head
			else
				existing.Size = UDim2.new(0, 50, 0, 50)
				local frame = existing:FindFirstChildOfClass("Frame")
				if frame then
					local lbl = frame:FindFirstChildOfClass("TextLabel")
					if lbl then
						lbl.TextColor3 = chamsColor
					end
				end
			end
		end
	end
end

local function NametagsLoop()
	while NametagsActive do
		UpdateNametags()
		task.wait(2)
	end
end

local nametagsSection = Tabs.Chams:AddSection("nametags")
nametagsSection:AddToggle("NametagsToggle", { Title = "enable nametag", Default = false }):OnChanged(function(s)
	NametagsActive = s
	if s then
		nametagTask = task.spawn(NametagsLoop)
	else
		if nametagTask then task.cancel(nametagTask) end
		nametagTask = nil
		RemoveNametags()
	end
end)

local VoiceSection = Tabs.Voice:AddSection("Voice Chat")
VoiceSection:AddButton({ Title = "Bypass Voiceban", Callback = function()
	if VoiceChatService and VoiceChatService.joinVoice then
		local success, err = pcall(function()
			VoiceChatService:joinVoice()
		end)
		if not success then
			warn("Voice join failed: " .. err)
		else
			print("Attempted to join voice.")
		end
	else
		warn("VoiceChatService oder joinVoice() nicht verfügbar.")
	end
end})

local TeleportSection = Tabs.Teleport:AddSection("Teleport Players")
-- Überarbeitete Teleportfunktion: Es wird sichergestellt, dass beide Charaktere geladen sind
local function TeleportToPlayer(targetPlayer)
	local localChar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local targetChar = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
	local root = localChar:WaitForChild("HumanoidRootPart")
	local targetRoot = targetChar:WaitForChild("HumanoidRootPart")
	if root and targetRoot then
		root.CFrame = targetRoot.CFrame
	else
		warn("Teleportation konnte nicht ausgeführt werden, da einer der HumanoidRootParts nicht gefunden wurde.")
	end
end

-- Teleport-Buttons für bereits vorhandene Spieler
for _, plr in pairs(Players:GetPlayers()) do
	if plr ~= LocalPlayer then
		TeleportSection:AddButton({ Title = plr.Name, Callback = function()
			TeleportToPlayer(plr)
		end})
	end
end

-- Hinzufügen von Teleport-Buttons, wenn neue Spieler dem Spiel beitreten
Players.PlayerAdded:Connect(function(plr)
	if plr ~= LocalPlayer then
		TeleportSection:AddButton({ Title = plr.Name, Callback = function()
			TeleportToPlayer(plr)
		end})
	end
end)

local InfoSection = Tabs.Info:AddSection("Info")
InfoSection:AddParagraph({ Title = "Info", Content = "Made by Tapetenputzer\nDiscord: tapetenputzer" })

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({}) 
InterfaceManager:SetFolder("FluentScriptHub_MicUp")
SaveManager:SetFolder("FluentScriptHub_MicUp/configs")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()

Fluent:Notify({ Title = "Voice Ban Bypasser", Content = "Script Loaded!", Duration = 5 })
Window:SelectTab(1)
